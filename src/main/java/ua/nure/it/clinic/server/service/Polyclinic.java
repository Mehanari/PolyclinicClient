
package ua.nure.it.clinic.server.service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.0
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "Polyclinic", targetNamespace = "http://it.nure.ua/clinic/server/service", wsdlLocation = "http://localhost:9000/polyclinic?wsdl")
public class Polyclinic
    extends Service
{

    private final static URL POLYCLINIC_WSDL_LOCATION;
    private final static WebServiceException POLYCLINIC_EXCEPTION;
    private final static QName POLYCLINIC_QNAME = new QName("http://it.nure.ua/clinic/server/service", "Polyclinic");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:9000/polyclinic?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        POLYCLINIC_WSDL_LOCATION = url;
        POLYCLINIC_EXCEPTION = e;
    }

    public Polyclinic() {
        super(__getWsdlLocation(), POLYCLINIC_QNAME);
    }

    public Polyclinic(WebServiceFeature... features) {
        super(__getWsdlLocation(), POLYCLINIC_QNAME, features);
    }

    public Polyclinic(URL wsdlLocation) {
        super(wsdlLocation, POLYCLINIC_QNAME);
    }

    public Polyclinic(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, POLYCLINIC_QNAME, features);
    }

    public Polyclinic(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Polyclinic(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns PolyclinicService
     */
    @WebEndpoint(name = "PolyclinicPort")
    public PolyclinicService getPolyclinicPort() {
        return super.getPort(new QName("http://it.nure.ua/clinic/server/service", "PolyclinicPort"), PolyclinicService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PolyclinicService
     */
    @WebEndpoint(name = "PolyclinicPort")
    public PolyclinicService getPolyclinicPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://it.nure.ua/clinic/server/service", "PolyclinicPort"), PolyclinicService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (POLYCLINIC_EXCEPTION!= null) {
            throw POLYCLINIC_EXCEPTION;
        }
        return POLYCLINIC_WSDL_LOCATION;
    }

}
